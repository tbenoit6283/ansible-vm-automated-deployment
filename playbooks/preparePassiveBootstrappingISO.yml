---
- name: Prepare Passive PA-VM VNF Bootstrapping ISO and upload it to the datastore
  hosts: localhost
  gather_facts: True
  vars_files:
    - ../variablesHA.yml
  tasks:
    - name: Create the bootstrapping directory structure
      file:
        path: "{{ bts.path }}/{{ item.f }}"
        state: directory
        mode: 0755
      with_items:
        - { f: "bts" }
        - { f: "bts/config" }
        - { f: "bts/license" }
        - { f: "bts/software" }
        - { f: "bts/content" }
    - name: Create the init-cfg.txt file and add the bootstrapping info.
      lineinfile:
        dest: "{{ bts.path }}/bts/config/init-cfg.txt"
        state: present
        create: yes
        line: "{{ item.line }}"
      with_items:
        - { line: "type=static"}
        - { line: "ip-address={{ panos_ha.p_ip }}" } 
        - { line: "hostname={{ panos_ha.p_hostname }}" }
        - { line: "tplname={{ panos_ha.p_tplname }}" }
        - { line: "default-gateway={{ panos_ha.default_gateway }}" }
        - { line: "netmask={{ panos_ha.netmask }}" }
        - { line: "vm-auth-key={{ panos_ha.vm_auth_key }}" }
        - { line: "panorama-server={{ panos_ha.panorama_server }}" }
        - { line: "dgname={{ panos_ha.dgname }}" }
        - { line: "dns-primary={{ panos_ha.dns_primary }}" }
        - { line: "dns-secondary={{ panos_ha.dns_secondary }}" }
    - name: Create license Authcode file and add the authcode
      lineinfile:
        dest: "{{ bts.path }}/bts/license/authcodes"
        state: present
        create: yes
        line: "{{ lic.authcode_vm50 }}"
    - name: Burn an ISO image (MacOS hdiutil)
      command: hdiutil makehybrid -o {{ bts.path }}/bts_passive_{{ panos_ha.p_ip }}.iso {{ bts.path }}/bts -iso -joliet
      when: ansible_os_family == "Darwin"
    - name: Burn an ISO image (Linux mkisofs)
      command: mkisofs -J -o {{ bts.path }}/bts_passive_{{ panos_ha.p_ip }}.iso {{ bts.path }}/bts
      when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"
    - name: Upload the ISO to the Datastore
      vsphere_copy: 
        host: "{{ vcsa.hostname }}" 
        login: "{{ vcsa.username }}"
        password: "{{ vcsa.password }}"
        src: "{{ bts.path }}/bts_passive_{{ panos_ha.p_ip }}.iso"
        datacenter: "{{ vcsa.datacenter }}"
        datastore: "{{ vcsa.datastore }}"
        path: "/bts_passive_{{ panos_ha.p_ip }}.iso"
        validate_certs: False
      tags: upload
    - name: Delete The ISO file from local folder
      file:
        path: "{{ bts.path }}/bts_passive_{{ panos_ha.p_ip }}.iso"
        state: absent
    - name: Delete the local bootstrapping directory
      file:
        path: "{{ bts.path }}/bts"
        state: absent
